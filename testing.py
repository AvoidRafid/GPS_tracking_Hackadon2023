import folium
import pandas as pd
import time
# Create a map centered on Ingolstadt, Germany
ingolstadt_map = folium.Map(location=[48.766549705649446, 11.43147624757401], zoom_start=15, tiles='CartoDB positron')
# Define the coordinates for the Bus 20 route in Ingolstadt
route_coordinates = [[48.766549705649446, 11.43147624757401],
    [48.766392509610505, 11.431765832596222],
    [48.766092581632826, 11.431780751753914],
    [48.76600407795287, 11.431743453859681],
    [48.76594999229388, 11.43170615596545],
    [48.7657533166793, 11.4316837772289080],
    [48.76564514476295, 11.431683777228908],
     [48.764425736133845, 11.432228326484713],
    [48.764357717513256, 11.432363447433302],
    [48.76397662278552, 11.432571220868255],
    [48.763678890517355, 11.431875631542546],
    [48.76314892271293, 11.4307283608365],
    [48.76254153700363, 11.429463652971576],
    [48.762428395695125, 11.429301047591128],
    [48.762166383315495, 11.428804198072763],
    [48.76257726575642, 11.428153776885084],
    [48.76276186401961, 11.427864700801672],
    [48.76280354740448, 11.427783398153213],
    [48.76279759263734, 11.427720162759968],
    [48.76281545694442, 11.427313649461505],
    [48.762833321237395, 11.427431086620391],
    [48.76276781879874, 11.427033607005697],
    [48.762196157526134, 11.425434654919325],
    [48.76191032444984, 11.4256604956094880],
    [48.76151730131388, 11.4261844460106750],
    [48.76147561686148, 11.426211546893494],
    [48.76133865341721, 11.426338017679988],
    # Add more coordinates for the longer route...
    [48.76008781004983, 11.428920368424603],
    [48.75974834740959, 11.430092321999384],
    [48.75936791243698, 11.43082035370531],
    [48.759151355857966, 11.431051193026699],
    [48.758331944136344, 11.431202126429147],
     [48.75691904779684, 11.430914273739942],
    [48.75655962784562, 11.430826340012137],
    [48.75656542496203, 11.430826340012137],
    [48.75655383072858, 11.430799959893797],
    [48.756113247874566, 11.430791166521017],
     [48.756536439373384, 11.430817546639357],
    [48.75592773814844, 11.430782373148237],
    [48.75512192232513, 11.43090548036716],
    [48.754994381945274, 11.430887893621602],
    [48.75471611085428, 11.431019794227675],
     [48.75428710664237, 11.43116048819216],#stop
    [48.7522463878005, 11.432074998961319],
    [48.75133035632122, 11.432488287532463],#stop
    [48.751046267173805, 11.43258501467965],
    [48.75052307393989, 11.432817976616379],
     [48.74992178549501, 11.433054011000284],
    [48.751287053590154, 11.432453196210023],
    [48.75055136969499, 11.432785790114616],
    [48.749518564512954, 11.433182757033002],#stop
    [48.74872626121722, 11.433504622101962],
     [48.748153248370556, 11.433697741143337],
    [48.74721236113462, 11.434008877460903],
    [48.74709209609776, 11.434373657872392],
    [48.74688693742944, 11.434716980612615],#stop
    [48.74634927625589, 11.435221235887319],
     [48.74616533821802, 11.435360710750537],
    [48.74603799610512, 11.43553237212065],
    [48.74574086325345, 11.435768406504552],
    [48.74561352006494, 11.43596152554593],
    [48.745281011329205, 11.436025898559722],
     [48.74511829348658, 11.43597225438156],
    [48.74491312676015, 11.436025898559722],
    [48.74438959407657, 11.436208288765465],#stop
    [48.74434714524157, 11.43634776362868],
    [48.74433299562194, 11.43640140780684],
     [48.743703333515256, 11.436626713355116],
    [48.7434203367405, 11.43680910356086],
    [48.7427906631994, 11.437066595616026],
    [48.74269868772256, 11.437077324490566],
    [48.741885051436306, 11.437442104902052],
      [48.74129073486829, 11.437763969971014],
    [48.74079546562586, 11.437914173743831],
    [48.74056905523479, 11.437248985934646],#stop
    [48.74039217140718, 11.436583798125463],
    [48.74025066389689, 11.436101000522022],
     [48.739974723105995, 11.436219017713974],
    [48.739543120369746, 11.43646578093351],#stop
    [48.73887094479388, 11.436830561344998],
    [48.73873650860007, 11.436916392030053],
    [48.73817753320204, 11.437248985934646],
     [48.73752656667638, 11.437656681688663],
    [48.73753935189913, 11.437656206350448],
]
stations_original = [
    [48.75428710664237, 11.43116048819216],  # stop
    [48.75133035632122, 11.432488287532463],  # stop
    [48.749518564512954, 11.433182757033002],  # stop
    [48.74688693742944, 11.434716980612615],  # stop
    [48.74438959407657, 11.436208288765465],  # stop
    [48.74056905523479, 11.437248985934646],  # stop
    [48.739543120369746, 11.43646578093351],  # stop
]

df = pd.DataFrame(stations_original, columns=['latitude', 'longitude'])

# Plot the route of the Bus
folium.PolyLine(locations=route_coordinates, color='green', weight=3).add_to(ingolstadt_map)
# Create a bus marker for the current GPS position at the start of the route
bus_icon = folium.features.CustomIcon('bus.png', icon_size=(20, 20))
marker = folium.Marker(location=route_coordinates[0], icon=bus_icon).add_to(ingolstadt_map)


# Create bus station markers
x = df[['latitude', 'longitude']].copy()

for index, row in x.iterrows():
    pushpin = folium.features.CustomIcon('station.png', icon_size=(40, 40))
    folium.Marker([row['latitude'], row['longitude']],
                  icon=pushpin,
                  ).add_to(ingolstadt_map)

ingolstadt_map



# Save the map as an HTML file
ingolstadt_map.save("GPS_map.html")

Simulate GPS movement
for coords in route_coordinates:
    marker.location = coords
    # Center the map at the bus marker's current location
    ingolstadt_map.location = (coords[0], coords[1])
    time.sleep(0.8)  # Simulate movement every 0.8 seconds
    ingolstadt_map.save("GPS_map.html")  # Save the updated map with the new marker location







